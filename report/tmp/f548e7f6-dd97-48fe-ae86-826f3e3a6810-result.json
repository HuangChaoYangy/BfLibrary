{"name": "test_BackendOwnerManagement[inBody1-expData1]", "status": "failed", "statusDetails": {"message": "AssertionError: 两个列表数据不一致！第3项,分别为133和132", "trace": "self = <BfLibrary.test_case.test_Report.Test_Report12 object at 0x0000027A694FD898>\ninBody = {'currency': '', 'limit': 50, 'name': '李扬业主', 'page': 1, ...}\nexpData = {'currency': '', 'name': '李扬业主', 'user_name': ''}\n\n    @pytest.mark.parametrize('inBody, expData', ya.get_yaml_data('../data/BackendOwnerManagement.yaml'))\n    \n    def test_BackendOwnerManagement(self, inBody, expData):\n        '''\n        总台-业主管理\n        :param inBody:\n        :param expData:\n        :return:\n        '''\n        apiRes = IncorrectBackend(mysql_info,mongo_info).getBackendOwnerManagement(inData=inBody)\n        sqlRes = MysqlQuery(mysql_info, mongo_info).getBackendOwnerManagement_sql(expData=expData)\n        # print(apiRes)\n        # print(sqlRes)\n>       self.cm.check_live_bet_report_new(apiRes, sqlRes)\n\ntest_Report.py:327: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\CommonFunc.py:337: in check_live_bet_report_new\n    self.two_list_should_be_equal(int_data[index], item, \"否\")\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\ndata1 = ['TestAgent01', '李扬业主', 'RMB', '133', 'PAANNGX3MCJ4EM5F', 13179714.0, ...]\ndata2 = ['TestAgent01', '李扬业主', 'RMB', 132, 'PAANNGX3MCJ4EM5F', Decimal('13179714.00'), ...]\nif_sort = '否'\n\n    @staticmethod\n    def two_list_should_be_equal(data1, data2, if_sort=\"是\"):\n        \"\"\"\n        断言两个列表值相同,abandon\n        :param data1:\n        :param data2:\n        :param if_sort: 是否对列表中的元素进行排序:   是|否，默认为是\n        :return:\n        \"\"\"\n        data1 = list(data1)\n        data2 = list(data2)\n        # print(\"=====================\")\n        # print(data1)\n        # print(data2)\n        if len(data1) != len(data2):\n            raise AssertionError(\"两个列表长度不一致！\")\n        if if_sort == \"是\":\n            data1.sort()\n            data2.sort()\n        for i in range(len(data1)):\n            item_1 = data1[i] if data1[i] else 0\n            item_2 = data2[i] if data2[i] else 0\n            if item_1 == item_2:\n                continue\n            if (type(item_1) in (float, int)) or (type(item_2) in (int, float)):\n                item_1 = float(round(float(item_1), 3))\n                item_2 = float(round(float(item_2), 3))\n            if item_1 != item_2:\n                try:\n                    if float(item_1) == float(item_2):\n                        pass\n                    else:\n>                       raise AssertionError(f\"两个列表数据不一致！第{i}项,分别为{data1[i]}和{data2[i]}\")\nE                       AssertionError: 两个列表数据不一致！第3项,分别为133和132\n\n..\\CommonFunc.py:233: AssertionError"}, "description": "\n        总台-业主管理\n        :param inBody:\n        :param expData:\n        :return:\n        ", "parameters": [{"name": "inBody", "value": "{'page': 1, 'limit': 50, 'userName': '', 'name': '李扬业主', 'currency': ''}"}, {"name": "expData", "value": "{'user_name': '', 'name': '李扬业主', 'currency': ''}"}], "start": 1640169469894, "stop": 1640169470832, "uuid": "585e9632-1bbf-457e-a291-b64c922965f9", "historyId": "506afae936b55a2441063d3ce733c8e7", "testCaseId": "f535d979ca65f982694c346a859ebd67", "fullName": "test_case.test_Report.Test_Report12#test_BackendOwnerManagement", "labels": [{"name": "parentSuite", "value": "test_case"}, {"name": "suite", "value": "test_Report"}, {"name": "subSuite", "value": "Test_Report12"}, {"name": "host", "value": "DESKTOP-FJQ0CRE"}, {"name": "thread", "value": "26688-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_case.test_Report"}]}